// t·∫°o m·∫£ng ch·ª©a value v√† id c·ªßa b√∫a k√©o bao
const VALUES = [
   {id: "scissors", value: "‚úåüèª"},
   {id: "rock", value: "‚úäüèª"},
   {id:"paper", value: "‚úãüèª"},
];
console.log(VALUES);

let i = 0
//l√†m h√†m handleChange ƒë·ªÉ cho n√≥ ch·∫°y li√™n t·ª•c
const handleChange = () => {
    let computer = document.querySelector("#computer");
    computer.textContent = VALUES[i].value;
    computer.setAttribute("data-id", VALUES[i].id);
    if(i === (VALUES.length - 1)){
        i = 0;
    }else{

        i++;
    }
    //     i = i === VALUES.length - 1 ? 0 : ++i;
};
// }
    //truy c·∫≠p v√†o #computer
    //th√™m value cho m√°y
    //th√™m data-id cho m√°y
    //l√†m i thay ƒë·ªïi li√™n t·ª•c

//d√πng callback setInterVval ƒë·∫ª cho m√°y ch·∫°y li√™n t·ª•c
let interval = setInterval(handleChange, (10));
//h√†m compare: h√†m so s√°nh gi√° tr·ªã ph√¢n th·∫Øng 1, thua -1, h√≤a 0
const compare = (valuePlayer, valueComputer) => {
    let indexPlayer = VALUES.findIndex((item) => item.id == valuePlayer);
    let indexComputer = VALUES.findIndex((item) => item.id == valueComputer);
    console.log(indexPlayer);
    
    let result = indexPlayer - indexComputer;
    if([1, -2].includes(result)) return 1;
    else if(result == 0) return 0;
    else return -1;
};
    //t√¨m v·ªã tr√≠ c·ªßa item c√≥ value.id c·ªßa ng∆∞·ªùi v√† m√°y
    //k·∫øt qu·∫£  = index c·ªßa ng∆∞·ªùi  - index c·ªßa m√°y
    //tr·∫£ 1 -1 0

//truy c·∫≠p v√†o class user  = playerItem
let playerItem = document.querySelectorAll(".user");
//ch·∫°y t·ª´ng thg trong playerItem:
playerItem.forEach((item) => {
    item.addEventListener("click", (event) => {
        clearInterval(interval);
        let computer = document.querySelector("#computer");
        let valueComputer = computer.dataset.id;
        let valuePlayer = event.target.id;
        let result = compare(valuePlayer, valueComputer);
        console.log(result);
        playerItem.forEach((_item) => {
            _item.classList.remove("actived");
            _item.style.pointerEvents = "none";
            // dell cho b·∫•m n·ªØa
        })
        event.target.classList.add("actived");

        let alertDiv = document.createElement("div");
        alertDiv.classList.add("alert");
        let msg = "";
        if(result == 1){
            msg = "B·∫°n th·∫Øng"
            alertDiv.classList.add("alert-success");
        }else if(result == 0){
            msg = "B·∫°n h√≤a"
            alertDiv.classList.add("alert-warning");
        }else{
            msg = "B·∫°n thua"
            alertDiv.classList.add("alert-dark");
        }
        alertDiv.textContent = msg;
        document.querySelector(".notification").appendChild(alertDiv);
        document.querySelector("#play-again").classList.remove("d-none");
    });
});
    //d·ª´ng m√°y l·∫°i
    //l·∫•y data-id c·ªßa m√°y
    //l·∫•y id c·ªßa thg v·ª´a nh·∫•n 
    //so s√°nh
    //duy·ªát c√°c n√∫t v√† x√≥a actived
    //th√™m c√°i actived cho n√∫t v·ª´a nh·∫•n
    //k·∫øt lu·∫≠n v√† th√¥ng b√°o
    //hi·ªán n√∫t ch∆°i l·∫°i


//s·ª± ki·ªán click ch∆°i l·∫°i
document.querySelector("#play-again").addEventListener("click", (event) => {
    clearInterval(interval);
    interval = setInterval(handleChange, 10);
    playerItem.forEach((item) => {
        item.classList.remove("actived");
        item.style.pointerEvents = "";
    })
    document.querySelector(".notification").innerHTML = "";
    document.querySelector("#play-again").classList.add("d-none");
});
    //kh√¥i ph·ª•c l·∫°i
    //x√≥a actived c·ªßa c√°c n√∫t v√† kh√¥i ph·ª•c l·∫°i kh·∫£ nƒÉng click
    //x√≥a th√¥ng b√°o v√† n√∫t ch∆°i l·∫°i
    //th√™m l·∫°i thu·ªôc t√≠nh d-none
